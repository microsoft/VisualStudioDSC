stages:
 - stage: 'Build'
   jobs:
    - job: 'Build'
      displayName: 'Build & Sign DSC Module'
      pool: '$(MicroBuildPool)'
      templateContext:
        mb:
          signing:
            enabled: true
            signType: $(SignType)
            zipSources: false

        outputs:
          - output: pipelineArtifact
            targetPath: '$(Build.ArtifactStagingDirectory)\dropModule'
            displayName: 'Publish module artifact'
            artifactName: dropModule

      steps:
        - checkout: self
          fetchDepth: 0

        - pwsh: |
            dotnet tool install nbgv --tool-path "."
          displayName: 'Install Nerdbank GitVersioning (nbgv)'

        - pwsh: |
            .\nbgv cloud --all-vars --common-vars
          displayName: 'Determine Version'

        - pwsh: |
            $updateModuleParams = @{
                  Path = "$(ModuleSourceFolder)\Microsoft.VisualStudio.DSC.psd1"
                  ModuleVersion = "$(GitBuildVersionSimple)"
                  Prerelease = "$(NBGV_PrereleaseVersionNoLeadingHyphen)"
                  IconUri = "https://go.microsoft.com/fwlink/?linkid=839265"
                  LicenseUri = "https://github.com/microsoft/VisualStudioDSC/blob/$(Build.SourceVersion)/LICENSE"
                  ProjectUri = "https://github.com/microsoft/VisualStudioDSC"
                  ReleaseNotes = "https://github.com/Microsoft/VisualStudioDSC/releases/tag/$(Build.BuildNumber)"
              }

            Update-ModuleManifest @updateModuleParams

            # Work around Update-ModuleManifest adding back in commented out manifest lines
            # See: https://github.com/PowerShell/PowerShell/issues/12054#issuecomment-1253925630
            (Get-Content -Path $updateModuleParams.Path) | `
             ForEach-Object {$_ -Replace 'CmdletsTo', '#CmdletsTo' -Replace 'AliasesTo', '#AliasesTo' } | `
             Set-Content -Path $updateModuleParams.Path
          displayName: 'Update Module Version'

        - pwsh: |
            $catalogFiles = Get-ChildItem $(ModuleSourceFolder) -Recurse -File
            $catalogFile = "$(ModuleSourceFolder)\catalog.cat"

            $newFileCatalogParams = @{
              Path = $catalogFiles
              CatalogFilePath = $catalogFile
              CatalogVersion = 2.0
            }
            New-FileCatalog @newFileCatalogParams

            $testFileCatalogParams = @{
              Path = $catalogFiles
              CatalogFilePath = $catalogFile
              Detailed = $true
            }
            Test-FileCatalog @testFileCatalogParams
          displayName: 'Create and test catalog file'

        - task: NuGetAuthenticate@1

        - task: MSBuild@1
          inputs:
            solution: '$(ModuleBuildFolder)\SignModule.signproj'
            msbuildArguments: '/r /p:ModuleFolder="$(ModuleSourceFolder)"'

        - task: MicroBuildCodesignVerify@3
          inputs:
            TargetFolders: '$(ModuleSourceFolder)'
          displayName: 'Verify signature'

        - task: CopyFiles@2
          displayName: 'Copying module to Artifact Staging'
          inputs:
            contents: $(ModuleSourceFolder)\**
            targetFolder: '$(Build.ArtifactStagingDirectory)\dropModule'

        - task: MicroBuildCleanup@1
          env:
            TeamName: '$(TeamName)'
          displayName: 'Clean up signing tools'